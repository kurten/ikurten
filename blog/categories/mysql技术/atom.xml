<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mysql技术 | ikurten.com]]></title>
  <link href="http://ikurten.com/blog/categories/mysql技术/atom.xml" rel="self"/>
  <link href="http://ikurten.com/"/>
  <updated>2013-01-27T10:47:16+08:00</updated>
  <id>http://ikurten.com/</id>
  <author>
    <name><![CDATA[kurten]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[mysql主从配置]]></title>
    <link href="http://ikurten.com/blog/2011/08/02/mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/"/>
    <updated>2011-08-02T00:37:49+08:00</updated>
    <id>http://ikurten.com/blog/2011/08/02/mysql主从配置</id>
    <content type="html"><![CDATA[<p>mysql由于其cluster没有很好得解决方案，所以没有被广泛的使用。使用最广的还是mysql的主从备份，从而读写分离。mysql 5.5版本的主从replication性能还是相当不错的，下面是配置方法（昨天刚在两台测试服务器中尝试，记录一下）。参考<a href="http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html">官方手册</a>。</p>

<p>1、安装mysql（此处省略N字。。。）</p>

<p>2、因为我配的是服务器，所以我使用了mysql-large.cnf文件作为/etc/my.cnf。</p>

<p>3、在my.cnf中([mysqld] 下面)</p>

<pre>[mysqld]
log-bin=mysql-bin
server-id=1</pre>


<p>当然如果你要使用innodb事务支持，那就的加上这两个参数配置 innodb_flush_log_at_trx_commit=1 和 sync_binlog=1。同时确保skip-networking没有启用，否则所有slave都无法连接master<code>。</code></p>

<p>重启mysql。</p>

<p>4、配置slave，重复 2。</p>

<p>5、在my.cnf中([mysqld] 下面)</p>

<pre>[mysqld]
server-id=2  #如果有多台slave，那么每台得id都必须唯一</pre>


<p>重启mysql。</p>

<p>6、在master中新建用于replication的用户</p>

<pre>mysql> CREATE USER 'repl'@'%.mydomain.com' IDENTIFIED BY 'slavepass';
mysql> GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%.mydomain.com';</pre>


<p>7、在slave中执行</p>

<pre>mysql> CHANGE MASTER TO
    ->     MASTER_HOST='master_host_name',
    ->     MASTER_USER='replication_user_name',
    ->     MASTER_PASSWORD='replication_password',
    ->     MASTER_LOG_FILE='recorded_log_file_name',
    ->     MASTER_LOG_POS=recorded_log_position;</pre>


<pre>change master to master_host='192.168.1.194', master_user='admin',
master_password='000000', master_log_file='mysql-bin.000001',
master_log_pos=268;</pre>


<p>再执行 start slave;
查看一下slave的状态：show slave status\G;
如果Slave_IO_Running 和 Slave_SQL_Running 两列的值都为 &ldquo;Yes&rdquo;，之后，你在master中新建数据库神马的操作，就会自动同步至slave中了。</p>

<p>mysql修改密码，如果采用sql方式更新user表，需要使用 flush privileges; 命令启用新密码。</p>

<p>创建用户</p>

<pre>create user 'username'@'localhost' IDENTIFIED BY 'password';</pre>


<p>设置用户权限</p>

<pre>GRANT ALL PRIVILEGES ON *.* TO kkk@"%" IDENTIFIED BY '000000' WITH
GRANT OPTION;</pre>


<p>移除权限</p>

<pre>revoke all on openfire.* from username@'localhost';</pre>


<p>添加字段</p>

<pre>alter table test add column ttt varchar(12);</pre>


<p>修改字段名称</p>

<pre>alter table test change ttt newttt varchar(12);</pre>

]]></content>
  </entry>
  
</feed>
